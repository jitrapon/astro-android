apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.getkeepsafe.dexcount'

android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

    defaultConfig {
        applicationId "io.jitrapon.glom"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode rootProject.versionCode
        versionName rootProject.versionName

        // support vector graphics for pre-lollipop devices
        vectorDrawables.useSupportLibrary = true

        // base host url for instant app
        resValue "string", "instant_app_host", "jitrapon.io"
    }

    signingConfigs {
        debug {
            keyAlias rootProject.keystoreProperties['keyAlias']
            keyPassword rootProject.keystoreProperties['keyPassword']
            storeFile file(rootProject.debugKeystorePath)
            storePassword rootProject.keystoreProperties['storePassword']
        }
        release {
            keyAlias rootProject.keystoreProperties['keyAlias']
            keyPassword rootProject.keystoreProperties['keyPassword']
            storeFile file(rootProject.releaseKeystorePath)
            storePassword rootProject.keystoreProperties['storePassword']
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }

    buildTypes {
        debug {
            minifyEnabled false
            useProguard false
            debuggable true
            signingConfig signingConfigs.debug
            proguardFiles getDefaultProguardFile('proguard-android.txt'), '../proguard-rules.pro'

            ext.enableCrashlytics = false
            ext.alwaysUpdateBuildId = false

            resValue "string", "google_geo_api_key", "AIzaSyDQB1ijIPQpjpWNRbGRXqpxiXtDoX5G6uc"
            resValue "string", "server_url", "http://192.168.1.35:8080/"
            resValue "string", "account_manager_account_type", "io.jitrapon.glom"
            resValue "string", "facebook_app_id", "440894693112447"
            resValue "string", "fb_login_protocol_scheme", "fb440894693112447"
            resValue "string", "google_oauth_server_key", "799298629384-3tujqc8omttijg1cn7ts5t3t5n1sbebu.apps.googleusercontent.com"
            resValue "string", "line_channel_id", "1634381849"
        }
        release {
            minifyEnabled true
            useProguard true
            debuggable false
            crunchPngs true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), '../proguard-rules.pro'

            resValue "string", "google_geo_api_key", "AIzaSyDQB1ijIPQpjpWNRbGRXqpxiXtDoX5G6uc"
            resValue "string", "server_url", "http://163.47.10.120:8080/"
            resValue "string", "account_manager_account_type", "io.jitrapon.glom"
            resValue "string", "facebook_app_id", "440894693112447"
            resValue "string", "fb_login_protocol_scheme", "fb440894693112447"
            resValue "string", "google_oauth_server_key", "799298629384-3tujqc8omttijg1cn7ts5t3t5n1sbebu.apps.googleusercontent.com"
            resValue "string", "line_channel_id", "1634381849"
        }
    }

    // modules
    dynamicFeatures = [':auth',
                       ':board',
                       ':map',
                       ':explore',
                       ':profile',
                       ':installed_feature']

    // lint
    lintOptions {
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // instant app
    implementation ("com.google.android.instantapps:instantapps:$rootProject.instantAppVersion") {
        exclude group: 'com.android.support'
    }

    // kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$rootProject.kotlinVersion"
    api ("androidx.core:core-ktx:$rootProject.ktxVersion") {
        exclude group: 'org.jetbrains.kotlin'
    }

    // support library
    api("com.google.android.material:material:$rootProject.materialVersion") {
        force = true
    }
    api "androidx.constraintlayout:constraintlayout:$rootProject.constraintLayoutVersion"

    // media loading
    api ("com.github.bumptech.glide:glide:$rootProject.glideVersion") {
        exclude group: 'com.android.support'
    }
    api ("com.github.bumptech.glide:okhttp3-integration:$rootProject.glideVersion") {
        transitive = false
    }
    kapt "com.github.bumptech.glide:compiler:$rootProject.glideVersion"
    api ("com.github.bumptech.glide:recyclerview-integration:$rootProject.glideVersion") {
        transitive = false
    }
    api "androidx.browser:browser:$rootProject.browserVersion"

    // architecture components
    // ViewModel and LiveData
    api "androidx.lifecycle:lifecycle-extensions:$rootProject.lifecycleVersion"
    kapt "androidx.lifecycle:lifecycle-compiler:$rootProject.lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-common-java8:$rootProject.lifecycleVersion"
    testImplementation "androidx.arch.core:core-testing:2.1.0"

    // room
    api "androidx.room:room-runtime:$rootProject.roomVersion"
    api "androidx.room:room-rxjava2:$rootProject.roomVersion"
    kapt "androidx.room:room-compiler:$rootProject.roomVersion"
    testImplementation "androidx.room:room-testing:$rootProject.roomVersion"

    // paging
    api "androidx.paging:paging-runtime:$rootProject.pagingVersion"

    // dagger
    api "com.google.dagger:dagger:$rootProject.daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"

    // reactive
    api "io.reactivex.rxjava2:rxjava:$rootProject.rxJavaVersion"
    api "io.reactivex.rxjava2:rxandroid:$rootProject.rxAndroidVersion"

    // google play services
    api "com.google.android.libraries.places:places:$rootProject.placeVersion"

    // networking
    api ("com.squareup.retrofit2:retrofit:$rootProject.retrofitVersion") {
        exclude group: 'com.squareup.okhttp3'
    }
    api ("com.squareup.retrofit2:adapter-rxjava2:$rootProject.retrofitVersion") {
        exclude group: 'com.squareup.retrofit2'
        exclude group: 'io.reactivex.rxjava2'
    }
    api "com.squareup.okhttp3:okhttp:$rootProject.okhttp3Version"
    implementation "com.squareup.okhttp3:logging-interceptor:$rootProject.okhttp3Version"

    // model serialization and deserialization
    api ("com.squareup.retrofit2:converter-moshi:$rootProject.retrofitVersion") {
        exclude group: 'com.squareup.retrofit2'
    }

    // testing
    testImplementation "junit:junit:$rootProject.junitVersion"
    androidTestImplementation('androidx.test.espresso:espresso-core:3.2.0', {
        exclude group: 'androidx.annotations', module: 'annotations'
    })

    // logging
    api "com.jakewharton.timber:timber:$rootProject.timberVersion"

    // animation
    api "com.airbnb.android:lottie:$rootProject.lottieVersion"

    // time
    api 'com.jakewharton.threetenabp:threetenabp:1.2.1'
    api 'com.github.kizitonwose:CalendarView:0.2.4'

    // work manager
    api "androidx.work:work-runtime-ktx:$rootProject.workManagerVersion"
}
